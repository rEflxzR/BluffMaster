{"version":3,"sources":["Components/Landing Page/Landingpage.js","Components/Login Pages/Playerloginpage.js","Components/Login Pages/Adminloginpage.js","Components/Aux Components/PlayerQuestioncard/PlayerQuestioncard.js","Components/Aux Components/Pollbooth.js","Components/Dashboard/Playerdashboard.js","Components/Aux Components/AdminQuestioncard/AdminQuestioncard.js","Components/Aux Components/Leaderboard/Leaderboardchart.js","Components/Aux Components/PlayerPollsChart/Playerpollschart.js","Components/Aux Components/Winnerspage.js","Components/Dashboard/Admingameplate.js","Components/Aux Components/Gamepincard.js","Components/Dashboard/Admindashborad.js","App.js","reportWebVitals.js","index.js"],"names":["Landingpage","document","title","window","localStorage","removeItem","className","to","Component","Playerloginpage","props","state","gamepin","teamname","playerauthorized","handleSubmitClick","bind","handleChange","console","log","evt","this","setState","currentTarget","id","value","preventDefault","toUpperCase","apiurl","location","hostname","axios","post","then","res","data","authenticated","alert","setItem","playerId","catch","err","style","height","color","marginTop","onSubmit","onChange","type","name","placeholder","required","withRouter","Adminloginpage","username","password","adminauthorized","target","Questioncard","handleOptionClick","getAttribute","response","points","questionNumber","question","role","options","map","opt","onClick","data-toggle","Pollbooth","selectedTeam","handleFormSubmitClick","handleFormChange","getItem","toggleBooth","class","width","Object","keys","team","shuffleArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Playerdashboard","nextQuestion","currentQuestionNumber","currentQuestion","currentOptions","navMessage","showPoll","pollData","playerResponse","handleNextQuestionClick","handlePollBooth","boothToggle","clear","get","headers","authorization","btoa","status","doShuffle","qdata","pop","answer","qnum","minHeight","currentUserAnswer","showAll","handleShowButton","handlePlayerResponse","prevProps","prevState","querySelector","String","indexOf","aria-hidden","Chart","maxWidth","scores","Number","fill","x","y","font-size","text-anchor","stroke","PollChart","kickedOutTeam","pollSubmitted","handlePollReset","handlePollSubmit","adminId","pollreset","polldata","disabled","Winnerspage","fontSize","finalResult","initialVelocityY","gravity","innerWidth","innerHeight","Gameplate","displayTab","isGameOver","handleQuestionTabClick","handleScoreboardTabClick","handlePollTabClick","handlePollBoothToggler","pollReset","st","href","aria-controls","aria-selected","whiteSpace","Gamepincard","gameStart","gamestart","Admindashboard","pinset","page","playersJoined","logOut","handleNewGameButton","startGame","handlelogoutclick","newgamepin","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","forceRefresh","getElementById"],"mappings":"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","file":"static/js/main.a92ff5d8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Landingpage.css'\n\nclass Landingpage extends Component {\n\n    async componentDidMount() {\n        document.title = \"Home | Qumong Us\"\n        window.localStorage.removeItem('playerLoggedIn')\n        window.localStorage.removeItem('adminLoggedIn')\n        window.localStorage.removeItem('playerId')\n        window.localStorage.removeItem('adminId')\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"sign\">QUMONG US</h1>\n                <div className=\"button\">\n                    <div className=\"Player-login mb-2\">\n                        <Link to='/playerlogin' className=\"btn btn-lg btn-success\"><strong>PLAY NOW</strong></Link>\n                    </div>\n                    <div className=\"Admin-login mt-2\">\n                        <Link to='/adminlogin' className=\"btn btn-lg btn-primary\"><strong>ADMIN LOGIN</strong></Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Landingpage","import React, { Component } from 'react'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport axios from 'axios'\n\nclass Playerloginpage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            gamepin: '',\n            teamname: '',\n            playerauthorized: false\n        }\n\n        window.localStorage.removeItem('playerLoggedIn')\n        window.localStorage.removeItem('playerId')\n\n        this.handleSubmitClick = this.handleSubmitClick.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        document.title = 'Login | Player'\n        console.log(\"LOGINPAGE MOUNTED FIRST TIME\")\n    }\n\n    handleChange(evt) {\n        this.setState({ [evt.currentTarget.id]: evt.currentTarget.value })\n    }\n\n    handleSubmitClick(evt) {\n        evt.preventDefault()\n        const gamepin = this.state.gamepin\n        const teamname = this.state.teamname.toUpperCase()\n        const apiurl = `http://${window.location.hostname}:8000/playerlogin`\n\n        axios.post(apiurl, {gamepin, teamname}).then((res) => {\n            if(!res.data.authenticated) {\n                alert('PLEASE ENTER THE CORRECT GAMEPIN')\n            }\n            if(res.data.authenticated) {\n                window.localStorage.setItem('playerLoggedIn', true)\n                window.localStorage.setItem('playerId', res.data.playerId)\n                this.setState({ playerauthorized: true })\n            }\n        }).catch((err) => {\n            alert('MAXIMUM TEAMS LIMIT REACHED / TEAMNAME ALREADY IN USE')\n        })\n    }\n\n    render() {\n        if(this.state.playerauthorized) {\n            return <Redirect to='/playerdashboard' />\n        }\n        else {\n            return (\n                <div className=\"d-flex flex-column\" style={{ height: '100vh' }}>\n                    <p className=\"text-center h2\" style={{color: 'white', marginTop: '30vh'}}>ENTER YOUR GAMEPIN</p>\n                    <div className=\"d-flex justify-content-center mt-4\">\n                        <form onSubmit={this.handleSubmitClick}>\n                            <div>\n                                <input className=\"mb-1\" onChange={this.handleChange} style={{ height: '40px' }} id=\"teamname\" type=\"text\" name=\"teamname\" placeholder=\"TeamName (A/B/C/D/E/F)\" required />\n                            </div>\n                            <div>\n                                <input className=\"mt-1\" onChange={this.handleChange} style={{ height: '40px' }} id=\"gamepin\" type=\"number\" name=\"gamepin\" placeholder=\"XXXXXXXX\" required />\n                            </div>\n                            <div className=\"d-flex justify-content-center\">\n                            <button className=\"btn btn-block btn-lg btn-success mt-2\"><strong>LOGIN</strong></button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default withRouter(Playerloginpage)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\nclass Adminloginpage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            adminauthorized: false\n        }\n\n        window.localStorage.removeItem('adminLoggedIn')\n        window.localStorage.removeItem('adminId')\n\n        this.handleSubmitClick = this.handleSubmitClick.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        document.title = 'Login | Admin'\n    }\n\n    handleChange(evt) {\n        this.setState({ [evt.target.name]: evt.target.value })\n    }\n\n    async handleSubmitClick(evt) {\n        evt.preventDefault()\n        const {username, password} = this.state\n        const apiurl = `http://${window.location.hostname}:8000/adminlogin`\n\n        await axios.post(apiurl, {username, password}).then((res) => {\n            console.log(res.data)\n            if(!res.data.authenticated) {\n                alert('STRANGERS ARE NOT WELCOME!!!!!!!!')\n            }\n            if(res.data.authenticated) {\n                window.localStorage.setItem('adminLoggedIn', true)\n                window.localStorage.setItem('adminId', res.data.id)\n                this.setState({ adminauthorized: true })\n            }\n        })\n    }\n\n    render() {\n        if(this.state.adminauthorized) {\n            return <Redirect to='/admindashboard' />\n        }\n        else {\n            return (\n                <div className=\"d-flex flex-column\" style={{ height: '100vh' }}>\n                    <p className=\"text-center h2\" style={{color: 'white', marginTop: '30vh'}}>QUIZ MASTER LOGIN</p>\n                    <div className=\"d-flex justify-content-center mt-4\">\n                        <form onSubmit={this.handleSubmitClick}>\n                            <div>\n                                <input className=\"mb-1\" onChange={this.handleChange} style={{ height: '40px' }} id=\"username\" type=\"text\" name=\"username\" placeholder=\"Username\" required />\n                            </div>\n                            <div>\n                                <input className=\"mt-1\" onChange={this.handleChange} style={{ height: '40px' }} id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" required />\n                            </div>\n                            <div className=\"d-flex justify-content-center\">\n                                <button className=\"btn btn-block btn-lg btn-success mt-2\"><strong>LOGIN</strong></button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Adminloginpage","import React, { Component } from 'react'\nimport './PlayerQuestioncard.css'\n\nclass Questioncard extends Component {\n    constructor(props) {\n        super(props)\n\n        this.handleOptionClick = this.handleOptionClick.bind(this)\n    }\n\n    handleOptionClick(evt) {\n        if(evt.currentTarget.getAttribute('value')!=null && evt.currentTarget.getAttribute('points')!=null) {\n            this.props.response(\n                {\n                    value: evt.currentTarget.getAttribute('value'),\n                    points: evt.currentTarget.getAttribute('points')\n                }\n            )\n        }\n    }\n\n    render() {\n        if(this.props==={}) {\n            return null\n        }\n        return (\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"Card\">\n                    <div className=\"card qcardbodymain\">\n                        <div className=\"card-body qcardbody mx-2 px-0 pb-0 mb-2\">\n                            <h2 className=\"card-title text-center mb-2\">QUESTION {this.props.questionNumber}</h2>\n                            <p className=\"card-text text-center rounded mx-2 p-2\"><strong>{this.props.question}</strong></p>\n                            <div className=\"list-group mx-2 mt-2\" id=\"list-tab\" role=\"tablist\">\n                                {\n                                    this.props.options.map((opt) => {\n                                    return <button onClick={this.handleOptionClick}\n                                            className=\"list-group-item rounded text-center list-group-item-action my-1\"\n                                            key={opt[1]} value={opt[0]} points={opt[1]} \n                                            data-toggle=\"list\" role=\"tab\"><strong>{opt[0]}</strong>\n                                            </button>\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Questioncard","import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass Pollbooth extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectedTeam: ''\n        }\n\n        this.handleFormSubmitClick = this.handleFormSubmitClick.bind(this)\n        this.handleFormChange = this.handleFormChange.bind(this)\n    }\n\n    handleFormChange(evt) {\n        this.setState({ selectedTeam: evt.currentTarget.value })\n    }\n\n    async handleFormSubmitClick(evt) {\n        evt.preventDefault()\n        if(this.state.selectedTeam==='') {\n            alert(\"NOTA is NOT an Option!!!\")\n        }\n        else {\n            const apiurl = `http://${window.location.hostname}:8000/pollresponse`\n            const playerId = window.localStorage.getItem('playerId')\n            const response = this.state.selectedTeam\n            await axios.post(apiurl, {playerId, response}).then((res) => {\n                console.log(\"Response Submitted Successfully\")\n                this.props.toggleBooth()\n            }).catch((err) => {\n                console.log(\"Some Error Ocurred while Submitting your response\")\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"d-flex justify-content-center\">\n                <div class=\"card\" style={{width: \"18rem\"}}>\n                    <div class=\"card-body\">\n                        <form style={{ width: \"100%\" }}>\n                            {\n                                Object.keys(this.props.data).map((team) => {\n                                    if(team===window.localStorage.getItem('playerId')) {\n                                        return null\n                                    }\n                                    else {\n                                        return <div className=\"d-flex justify-content-center\">\n                                                <input onChange={this.handleFormChange} type=\"radio\" value={team} name=\"vote\" />\n                                                <label className=\"ml-2 h5\">TEAM {this.props.data[team]}</label>\n                                            </div>\n                                    }\n                                })\n                            }\n                            \n                            <div className=\"d-flex justify-content-center\">\n                                <button onClick={this.handleFormSubmitClick} className=\"btn btn-lg btn-block btn-success\">VOTE</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Pollbooth","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Questioncard from '../Aux Components/PlayerQuestioncard/PlayerQuestioncard'\nimport Pollbooth from '../Aux Components/Pollbooth'\n\n\n// SHUFFLER FUNCTION\nfunction shuffleArray(array) {\n    let currentIndex = array.length-1, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n  \n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n  \n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n}\n\n\nclass Playerdashboard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            nextQuestion: false,\n            response: {},\n            currentQuestionNumber: 0,\n            currentQuestion: [],\n            currentOptions: [],\n            navMessage: 'There Is An Imposter Among You Guys',\n            showPoll: false,\n            pollData: []\n        }\n\n        this.playerResponse = this.playerResponse.bind(this)\n        this.handleNextQuestionClick = this.handleNextQuestionClick.bind(this)\n        this.handleSubmitClick = this.handleSubmitClick.bind(this)\n        this.handlePollBooth = this.handlePollBooth.bind(this)\n        this.boothToggle = this.boothToggle.bind(this)\n    }\n\n    componentDidMount() {\n        document.title = 'Dashboard | Player'\n    }\n\n    componentWillUnmount() {\n        window.localStorage.clear()\n    }\n\n    playerResponse(data) {\n        this.setState({ response: data })\n    }\n\n    async handleNextQuestionClick() {\n        const apiurl = `http://${window.location.hostname}:8000/questions`\n        await axios.get(apiurl, {\n            headers: {\n                authorization: window.btoa('taskforce141'),\n                id: window.localStorage.getItem('playerId')\n            }\n        }).then((res) => {\n            if(res.status===200) {\n                console.log(res.data)\n                if(res.data.doShuffle) {\n                    this.setState({ currentQuestionNumber: this.state.currentQuestionNumber+1, \n                        currentQuestion: res.data.qdata.pop(), currentOptions: shuffleArray(res.data.qdata), \n                        nextQuestion: true, navMessage: 'You are Not The Imposter' })\n                }\n                else {\n                    this.setState({ currentQuestionNumber: this.state.currentQuestionNumber+1, \n                        currentQuestion: res.data.qdata.pop(), currentOptions: res.data.qdata, \n                        nextQuestion: true, navMessage: 'You are The Imposter' })\n                }\n            }\n        })\n        .catch((err) => {\n            console.log(err)\n            this.setState({ navMessage : \"YOU CAN NO LONGER PARTICIPATE IN FURTHER ROUNDS :(\" })\n        })\n    }\n\n    async handleSubmitClick() {\n        const apiurl = `http://${window.location.hostname}:8000/playerresponse`\n        const playerId = window.localStorage.getItem('playerId')\n        const answer = this.state.response\n        await axios.post(apiurl, {playerId, answer}).then((res) => {\n            this.setState({ nextQuestion: false, response: '', currentQuestion: [], currentOptions: [] })\n        }).catch((err) => {\n            alert('OPTION ALREADY SELECTED!!!')\n        })\n        // this.setState({ nextQuestion: false, response: '', currentQuestion: [], currentOptions: [] })\n    }\n\n    async handlePollBooth() {\n        const qnum = this.state.currentQuestionNumber\n        const apiurl = `http://${window.location.hostname}:8000/playerpoll`\n        const playerId = window.localStorage.getItem('playerId')\n        if(qnum%2===0 && qnum<9 && qnum>0) {\n            await axios.get(apiurl, {\n                headers: {\n                    id: playerId\n                }\n            }).then((res) => {\n                if(res.status===200) {\n                    this.setState({ showPoll: true, pollData: res.data })\n                }\n            })\n        }\n    }\n\n    boothToggle() {\n        this.setState({ showPoll: !this.state.showPoll })\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <nav className=\"navbar navbar-light bg-dark\">\n                    <h3 className=\"text-light text-center h4\" style={{ width: \"100vw\" }}>{this.state.navMessage}</h3>\n                    </nav>\n                </div>\n                {\n                    this.state.nextQuestion ?\n                    (\n                        <div className=\"mt-4\">\n                            <Questioncard \n                            questionNumber={this.state.currentQuestionNumber}\n                            question={this.state.currentQuestion}\n                            options={this.state.currentOptions}\n                            response={this.playerResponse} />\n                            <div className=\"d-flex justify-content-center my-3\">\n                                <button onClick={this.handleSubmitClick} \n                                className=\"btn btn-lg btn-info\"><strong>SUBMIT RESPONSE</strong></button>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"d-flex flex-column justify-content-center\" style={{ minHeight: '60vh' }}>\n                            <h2 className=\"h2 text-center text-light\">\n                                COMPLETED: {this.state.currentQuestionNumber}/10 Questions</h2>\n                                \n                            <div className=\"d-flex justify-content-center mt-4\">\n                                <button onClick={this.handleNextQuestionClick} \n                                className=\"btn btn-lg btn-primary\"><strong>NEXT QUESTION</strong></button>\n                            </div>\n                            <div className=\"d-flex justify-content-center mt-4\">\n                                <button onClick={this.handlePollBooth} \n                                className=\"btn btn-lg btn-warning\"><strong>POLL BOOTH</strong></button>\n                            </div>\n                            {\n                                this.state.showPoll ? (\n                                    <div className=\"mt-5\">\n                                        <Pollbooth toggleBooth={this.boothToggle} data={this.state.pollData} />\n                                    </div>\n                                ) : (\n                                    null\n                                )\n                            }\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default Playerdashboard","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './AdminQuestioncard.css'\n\nclass Questioncard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentUserAnswer: [],\n            showAll: false\n        }\n\n        this.handleOptionClick = this.handleOptionClick.bind(this)\n        this.handleShowButton = this.handleShowButton.bind(this)\n        this.handlePlayerResponse = this.handlePlayerResponse.bind(this)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps!==this.props) {\n            this.setState({ currentUserAnswer: [], showAll: false })\n        }\n    }\n\n    handleOptionClick(evt) {\n        console.log(evt.target.querySelector('div').className)\n        evt.target.querySelector('div').className = \"text-center\"\n    }\n\n    handleShowButton() {\n        this.setState({ showAll: true })\n    }\n\n    async handlePlayerResponse() {\n        const apiurl = `http://${window.location.hostname}:8000/getresponse`\n        await axios.get(apiurl).then((res) => {\n            this.setState({ currentUserAnswer: [...this.state.currentUserAnswer, String(res.data)] })\n        })\n    }\n\n    render() {\n        if(this.props==={}) {\n            return null\n        }\n        return (\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"Card\">\n                    <div className=\"card qcard\">\n                        <div className=\"card-body qcardbodya mx-2 px-0 pb-0 mb-2\">\n                            <h2 className=\"card-title text-light text-center mb-2\">QUESTION {this.props.questionNumber}</h2>\n                            <p className=\"card-text text-center rounded mx-2 p-2\"><strong>{this.props.question}</strong></p>\n                            <div className=\"list-group mx-2 mt-2\" id=\"list-tab\" role=\"tablist\">\n                                {\n                                    this.props.options.map((opt) => {\n                                        if(this.state.currentUserAnswer.indexOf(opt[0])!== -1) {\n                                            return <div aria-hidden=\"true\" onClick={this.handleOptionClick} className=\"list-group-item rounded text-center my-1\">\n                                                <div className=\"text-center\">\n                                                    <strong>{opt[0]}</strong> ({opt[1]} Points)\n                                                </div>\n                                            </div>\n                                        }\n                                        return <div aria-hidden=\"true\" onClick={this.handleOptionClick} className=\"list-group-item rounded text-center my-1\">\n                                                    <div className={this.state.showAll ? \"text-center\" : \"text-hide\"}>\n                                                        <strong>{opt[0]}</strong> ({opt[1]} Points)\n                                                    </div>\n                                                </div>\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-around\">\n                        <button className=\"btn btn-lg btn-danger mt-3\" \n                        onClick={this.handleShowButton}><strong>SHOW ALL OPTIONS</strong></button>\n\n                        <button className=\"btn btn-lg btn-warning mt-3\" \n                        onClick={this.handlePlayerResponse}><strong>SHOW PLAYER RESPONSE</strong></button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Questioncard","import React, { Component } from 'react'\nimport './chart.css'\n\nclass Chart extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"bars ml-2 d-flex align-items-end pt-0\" style={{ height: '600px', maxWidth: \"620px\" }}>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(this.props.scores).map((team) => {\n\t\t\t\t\t\t\treturn <svg className=\"mx-4\" height={Number(this.props.scores[team][1])*0.11 + \"%\"} width=\"10%\" fill=\"#1d58bf\">\n\t\t\t\t\t\t\t\t\t\t<rect height=\"100%\" width=\"100%\" />\n\t\t\t\t\t\t\t\t\t\t<text x=\"50%\" y=\"50%\" font-size=\"1.5em\" text-anchor=\"middle\" stroke=\"white\">{Number(this.props.scores[team][1])}</text>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"ml-2 d-flex align-content-start\" style={{ maxWidth: \"620px\" }}>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(this.props.scores).map((team) => {\n\t\t\t\t\t\t\treturn <div className=\"mx-4\" style={{ width: \"10%\" }}>\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"text-center mb-0\">{this.props.scores[team][2]}</h1>\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"text-center h4\">({Number(this.props.scores[team][1])})</h1>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Chart","import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass PollChart extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tkickedOutTeam: '',\n\t\t\tpollSubmitted: false\n\t\t}\n\n\t\tthis.handlePollReset = this.handlePollReset.bind(this)\n\t\tthis.handlePollSubmit = this.handlePollSubmit.bind(this)\n\t}\n\n\tasync handlePollReset() {\n\t\tconst apiurl = `http://${window.location.hostname}:8000/pollreset`\n\t\tconst adminId = window.localStorage.getItem('adminId')\n\t\tawait axios.post(apiurl, {adminId}).then((res) => {\n\t\t\tthis.props.pollreset(res.data)\n\t\t})\n\t}\n\n\tasync handlePollSubmit() {\n\t\tconst apiurl = `http://${window.location.hostname}:8000/pollsubmit`\n\t\tconst adminId = window.localStorage.getItem('adminId')\n\t\tawait axios.post(apiurl, {adminId}).then((res) => {\n\t\t\tconsole.log(res.data)\n\t\t\tthis.setState({ kickedOutTeam: String(res.data), pollSubmitted: true })\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"card text-center\" style={{width: \"18rem\"}}>\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<h5 className=\"card-title h3 mb-4\">VOTING RESULTS</h5>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.keys(this.props.polldata).map((team) => {\n\t\t\t\t\t\t\t\treturn <h5 className=\"card-text\">Team {this.props.polldata[team][0]}: {this.props.polldata[team][1]} Vote(s)</h5>\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"mb-2 mt-4\" style={{ width: '100%' }}>\n\t\t\t\t\t\t\t<button onClick={this.handlePollReset} disabled={this.state.pollSubmitted ? true : false}\n\t\t\t\t\t\t\tclassName=\"btn btn-block btn-lg btn-warning\"><strong>Poll Reset</strong></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t\t\t<button onClick={this.handlePollSubmit} disabled={this.state.pollSubmitted ? true : false}\n\t\t\t\t\t\t\tclassName=\"btn btn-block btn-lg btn-danger\"><strong>Submit Results</strong></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.kickedOutTeam==='' ? (\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"mt-4\">\n\t\t\t\t\t\t\t\t\t<h3>End of The Line TEAM-{this.state.kickedOutTeam} :(</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PollChart","import React, { Component } from 'react'\nimport Confetti from 'react-confetti'\n\nclass Winnerspage extends Component {\n\n    render() {\n        return(\n            <div style={{ width: '100%' }}>\n                <h1 className=\"text-center mt-5\" style={{ color: '#FFD700', fontSize: '6rem' }}>FINAL RESULTS</h1>\n                <div>\n                    <p className=\"text-center text-light mt-5 mb-0\" style={{ fontSize: '4.5rem' }}>1st Place</p>\n                    <p className=\"text-center text-light\" style={{ fontSize: '3rem' }}>Team {this.props.finalResult[0][2]}</p>\n                </div>\n                <div>\n                    <p className=\"text-center text-light mt-5 mb-0\" style={{ fontSize: '3.5rem' }}>2nd Place</p>\n                    <p className=\"text-center text-light\" style={{ fontSize: '2.5rem' }}>Team {this.props.finalResult[1][2]}</p>\n                </div>\n                <div>\n                    <p className=\"text-center text-light mt-5 mb-0\" style={{ fontSize: '3.5rem' }}>3rd Place</p>\n                    <p className=\"text-center text-light\" style={{ fontSize: '2.5rem' }}>Team {this.props.finalResult[2][2]}</p>\n                </div>\n                <Confetti initialVelocityY={4, 7} gravity={0.08} width={window.innerWidth} height={window.innerHeight} />\n            </div>\n        )\n    }\n}\n\nexport default Winnerspage","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Questioncard from '../Aux Components/AdminQuestioncard/AdminQuestioncard'\nimport Chart from '../Aux Components/Leaderboard/Leaderboardchart'\nimport Pollchart from '../Aux Components/PlayerPollsChart/Playerpollschart'\nimport Winnerspage from '../Aux Components/Winnerspage'\nimport './Admindashboard.css'\n\nclass Gameplate extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentQuestionNumber: 0,\n            currentQuestion: [],\n            currentOptions: [],\n            displayTab: '',\n            scores: [],\n            polldata: [],\n            isGameOver: false,\n            finalResult: []\n        }\n\n        this.handleNextQuestionClick = this.handleNextQuestionClick.bind(this)\n        this.handleQuestionTabClick = this.handleQuestionTabClick.bind(this)\n        this.handleScoreboardTabClick = this.handleScoreboardTabClick.bind(this)\n        this.handlePollTabClick = this.handlePollTabClick.bind(this)\n        this.handlePollBoothToggler = this.handlePollBoothToggler.bind(this)\n        this.pollReset = this.pollReset.bind(this)\n    }\n\n    handleQuestionTabClick() {\n        if(this.state.currentQuestionNumber) {\n            this.setState({ displayTab: 'question' })\n        }\n    }\n\n    async handleScoreboardTabClick() {\n        this.setState({ displayTab: 'scoreboard' })\n        const apiurl = `http://${window.location.hostname}:8000/scoreboard`\n        const adminId = window.localStorage.getItem('adminId')\n        await axios.get(apiurl, {\n            headers: {\n                id: adminId\n            }\n        }).then((res) => {\n            this.setState({ scores: res.data })\n        })\n    }\n\n    handlePollTabClick() {\n        const qnum = this.state.currentQuestionNumber\n        if(qnum>0 && qnum%2===0 && qnum<9) {\n            this.setState({ displayTab: 'poll' })\n            const apiurl = `http://${window.location.hostname}:8000/pollresults`\n            const adminId = window.localStorage.getItem('adminId')\n            axios.get(apiurl, {\n                headers: {\n                    id: adminId\n                }\n            }).then((res) => {\n                this.setState({ polldata: res.data })\n            })\n        }\n    }\n\n    pollReset(data) {\n        this.setState({ polldata: data })\n    }\n\n    async handleNextQuestionClick() {\n        if(this.state.currentQuestionNumber===10) {\n            const apiurl = `http://${window.location.hostname}:8000/nextquestion`\n            const adminId = window.localStorage.getItem('adminId')\n            await axios.post(apiurl, {adminId}).then((res) => {\n                this.setState({ isGameOver: true, finalResult: res.data })  \n            })\n        }\n        else {\n            const apiurl = `http://${window.location.hostname}:8000/nextquestion`\n            const adminId = window.localStorage.getItem('adminId')\n            await axios.post(apiurl, {adminId}).then((res) => {\n                this.setState(st => ({\n                    currentQuestionNumber: st.currentQuestionNumber+1,\n                    currentQuestion: res.data.pop(),\n                    currentOptions: res.data\n                }))\n            })\n        }\n    }\n\n    handlePollBoothToggler() {\n        const apiurl = `http://${window.location.hostname}:8000/togglepolls`\n        const adminId = window.localStorage.getItem('adminId')\n        axios.post(apiurl, {adminId}).then((res) => {\n            console.log(\"POLL TOGGLED\")\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                {\n                    this.state.isGameOver ? (\n                        <Winnerspage finalResult={this.state.finalResult} />\n                    ) : (\n                        <div className=\"col col-10 offset-1 mt-5 d-flex\">\n                        <div className=\"d-flex align-items-center\">\n                            <h3 className=\"text-light h2\">Current Question Number: {this.state.currentQuestionNumber}</h3>\n                        </div>\n\n                        <div className=\"Gamecard container mx-0\">\n                            <div className=\"card platecard text-center\" style={{width: \"100%\", minHeight: \"60vh\"}}>\n                                <div className=\"d-flex\">\n                                    <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                                        <li className=\"nav-item\" role=\"presentation\" style={{ width: \"34%\" }}>\n                                            <a onClick={this.handleQuestionTabClick} className=\"nav-link text-dark\" type=\"button\" id=\"question\" data-toggle=\"tab\" href=\"question\" role=\"tab\" aria-controls=\"btech\" aria-selected=\"false\">\n                                                <span><strong>QUESTION CARD</strong></span>\n                                            </a>\n                                        </li>\n                                        <li className=\"nav-item\" role=\"presentation\">\n                                            <a onClick={this.handleScoreboardTabClick} className=\"nav-link text-dark\" type=\"button\" id=\"scoreboard\" data-toggle=\"tab\" href=\"scorecard\" role=\"tab\" aria-controls=\"mca\" aria-selected=\"false\">\n                                                <span><strong>LEADER BOARD</strong></span>\n                                            </a>\n                                        </li>\n                                        <li className=\"nav-item\" role=\"presentation\">\n                                            <a onClick={this.handlePollTabClick} className=\"nav-link text-dark\" type=\"button\" id=\"poll\" data-toggle=\"tab\" href=\"poll\" role=\"tab\" aria-controls=\"mca\" aria-selected=\"false\">\n                                                <span><strong>EXIT POLLS</strong></span>\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div className=\"my-5\">\n                                    {\n                                    this.state.displayTab==='question' ? (\n                                            <Questioncard\n                                            questionNumber={this.state.currentQuestionNumber}\n                                            question={this.state.currentQuestion}\n                                            options={this.state.currentOptions}  />\n                                        ) : (\n                                            null\n                                        )\n                                    }\n                                    {\n                                        this.state.displayTab==='scoreboard' ? (\n                                            <div className=\"d-flex justify-content-center\">\n                                                <Chart scores={this.state.scores} />\n                                            </div>\n                                        ) : (\n                                            null\n                                        )\n                                    }\n                                    {\n                                        this.state.displayTab==='poll' ? (\n                                            <div className=\"d-flex justify-content-center\">\n                                                <Pollchart pollreset={this.pollReset} polldata={this.state.polldata} />\n                                            </div>\n                                        ) : (\n                                            null\n                                        )\n                                    }\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"d-flex flex-column justify-content-center\">\n                        <button className=\"btn btn-lg btn-warning mb-3\"\n                                disabled={this.state.currentQuestionNumber%2===0 && this.state.currentQuestionNumber<9\n                                    && this.state.currentQuestionNumber>0 ? false : true}\n                                onClick={this.handlePollBoothToggler}\n                                style={{ whiteSpace: 'nowrap' }}>\n                                <strong>TOGGLE POLLING BOOTH</strong>\n                            </button>\n                            <button className=\"btn btn-lg btn-primary mt-3\"\n                                onClick={this.handleNextQuestionClick}\n                                style={{ whiteSpace: 'nowrap' }}>\n                                <strong>{this.state.currentQuestionNumber===10 ? \"FINAL RESULTS\" : \"NEXT QUESTION\"}</strong>\n                            </button>\n                        </div>\n                    </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default Gameplate","import React, { Component } from 'react'\n\nclass Gamepincard extends Component {\n    constructor(props) {\n        super(props)\n\n        this.gameStart = this.gameStart.bind(this)\n    }\n\n    gameStart() {\n        this.props.gamestart()\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"card text-center\" style={{width: \"21rem\"}}>\n                <div className=\"card-body px-0 pb-1\">\n                    <h1 className=\"card-title h2 mb-0\">CURRENT GAMEPIN</h1>\n                    <h3 className=\"mb-3\">{this.props.gamepin}</h3>\n                    <button onClick={this.gameStart} className=\"btn btn-lg btn-success\">START GAME</button>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Gamepincard","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport Gameplate from './Admingameplate'\nimport Gamepincard from '../Aux Components/Gamepincard'\n\nclass Admindashboard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            pinset: false,\n            gamepin: '',\n            page: 'home',\n            playersJoined: 0,\n            logOut: false\n        }\n\n        this.handleNewGameButton = this.handleNewGameButton.bind(this)\n        this.startGame = this.startGame.bind(this)\n        this.handlelogoutclick = this.handlelogoutclick.bind(this)\n    }\n\n    componentDidMount() {\n        document.title = 'Dashboard | Admin'\n    }\n\n    componentWillUnmount() {\n        window.localStorage.removeItem('adminLoggedIn')\n    }\n\n    handlelogoutclick() {\n        this.setState({ logOut: true })  \n    }\n\n    async handleNewGameButton() {    \n        const newgamepin = Math.floor(100000 + Math.random() * 900000)\n        this.setState({ gamepin: newgamepin, pinset: true })\n        const adminId = window.localStorage.getItem('adminId')\n        const apiurl = `http://${window.location.hostname}:8000/newgamepin`\n\n        await axios.post(apiurl, {adminId, newgamepin}).then((res) => {\n            console.log(\"New Gamepin Registered Successfully\")\n        })\n\n    }\n\n    async startGame() {\n        if(this.state.pinset) {\n            const apiurl = `http://${window.location.hostname}:8000/startgame`\n            const adminId = window.localStorage.getItem('adminId')\n            await axios.get(apiurl, {\n                headers: {\n                    id: adminId\n                }\n            }).then((res) => {\n                if(res.data===true) {\n                    this.setState({ page: 'game' })\n                }\n                else {\n                    console.log(res.data)\n                    this.setState({ playersJoined: res.data.playersJoined })\n                }\n            })\n        }\n    }\n\n    render() {\n        if(this.state.logOut) {\n            return <Redirect to='/' />\n        }\n        return (\n            <div>\n                <div>\n                    <nav className=\"navbar navbar-light bg-dark d-flex\">\n                        <div className=\"justify-content-center\" style={{ width: '90%' }}>\n                            <h3 className=\"text-light text-center h2\" style={{ fontSize: \"3rem\" }}>QUIZ MASTER DASHBOARD</h3>\n                        </div>\n                        <div className=\"justify-content-end\">\n                            <a onClick={this.handlelogoutclick} type=\"button\" className=\"btn btn-lg text-light\">LOGOUT</a>\n                        </div>\n                    </nav>\n                </div>\n\n                {/* CONDTIONALLY SHOW THE HOMEPAGE OR GAMEPAGE */}\n                {\n                    this.state.page==='home' ? \n                    (\n                        <div>\n                            \n                            <div className=\"d-flex flex-column justify-content-center mb-4\" style={{ height: \"30vh\" }}>\n                                <h2 className=\"text-center text-light mb-4\">Players Joined: {this.state.playersJoined}/6</h2>\n                                <div className=\"d-flex justify-content-center\" style={{ width: \"100vw\" }}>\n                                    <button onClick={this.handleNewGameButton}\n                                    disabled={this.state.pinset}\n                                    className=\"btn btn-warning btn-lg\"><strong>SET NEW GAMEPIN</strong></button>\n                                    \n                                </div>\n                            </div>\n                            {/* CONDITIONALLY LOAD THE GAMEPIN CARD */}\n                            {\n                                this.state.pinset ? (\n                                    <div className=\"d-flex justify-content-center mt-5\" style={{ width: \"100vw\" }}>\n                                        <Gamepincard \n                                        gamepin={this.state.gamepin} \n                                        gamestart={this.startGame} />\n                                    </div>\n                                ) : (\n                                    null\n                                )\n                            }\n                        </div>\n                    ) : (\n                        <Gameplate />\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default Admindashboard","import React, { Component } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport Landingpage from './Components/Landing Page/Landingpage'\nimport Playerloginpage from './Components/Login Pages/Playerloginpage'\nimport Adminloginpage from './Components/Login Pages/Adminloginpage'\nimport Playerdashboard from './Components/Dashboard/Playerdashboard'\nimport Admindashboard from './Components/Dashboard/Admindashborad'\nimport './App.css'\n\n\n// APP CLASS\nclass App extends Component {\n\n    render() {\n        return (\n            <div>\n                <Switch>\n                    {/* PUBLICALLY ACCESSIBLE ROUTES */}\n                    <Route exact path=\"/\" component={Landingpage} />\n                    <Route exact path=\"/playerlogin\" component={Playerloginpage} />\n                    <Route exact path=\"/adminlogin\" component={Adminloginpage} />\n\n                    {/* PRIVATE ROUTES ONLY ACCESSIBLE AFTER LOGIN */}\n                    <Route exact path=\"/playerdashboard\" component={() => {\n                        return window.localStorage.getItem('playerLoggedIn') ? (\n                            <Playerdashboard />\n                        ) : (\n                            <Redirect to=\"/playerlogin\" />\n                        )\n                    }} />\n\n                    <Route exact path=\"/admindashboard\" component={() => {\n                        return window.localStorage.getItem('adminLoggedIn') ? (\n                            <Admindashboard />\n                        ) : (\n                            <Redirect to=\"/adminlogin\" />\n                        )\n                    }} />\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter forceRefresh>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}